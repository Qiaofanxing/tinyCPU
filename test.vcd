$date
	Tue Jun 22 09:18:49 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module test $end
$var wire 1 ! wr_ $end
$var wire 24 " rom_out [23:0] $end
$var wire 8 # rom_addr [7:0] $end
$var wire 1 $ rd_ $end
$var wire 8 % ram_out [7:0] $end
$var wire 8 & ram_in [7:0] $end
$var wire 8 ' ram_addr [7:0] $end
$var reg 1 ( clk $end
$var reg 1 ) rst_ $end
$var integer 32 * i [31:0] $end
$scope module cpu $end
$var wire 1 ( clk $end
$var wire 1 ) rst_ $end
$var wire 8 + valM [7:0] $end
$var wire 3 , val_rB [2:0] $end
$var wire 3 - val_rA [2:0] $end
$var wire 8 . valP [7:0] $end
$var wire 8 / valE [7:0] $end
$var wire 8 0 valC [7:0] $end
$var wire 8 1 valB [7:0] $end
$var wire 8 2 valA [7:0] $end
$var wire 24 3 rom_data [23:0] $end
$var wire 8 4 rom_addr [7:0] $end
$var wire 1 ! ram_wr_ $end
$var wire 8 5 ram_wdat [7:0] $end
$var wire 8 6 ram_rdat [7:0] $end
$var wire 1 $ ram_rd_ $end
$var wire 8 7 ram_addr [7:0] $end
$var wire 8 8 new_pc [7:0] $end
$var wire 3 9 dstM [2:0] $end
$var wire 3 : dstE [2:0] $end
$var wire 2 ; cc [1:0] $end
$var wire 8 < aluB [7:0] $end
$var wire 8 = aluA [7:0] $end
$scope module alu $end
$var wire 8 > A [7:0] $end
$var wire 8 ? B [7:0] $end
$var wire 4 @ op [3:0] $end
$var wire 2 A cc [1:0] $end
$var wire 8 B E [7:0] $end
$upscope $end
$scope module pc $end
$var wire 1 ( clk $end
$var wire 8 C new_pc [7:0] $end
$var wire 1 ) rst_ $end
$var reg 8 D pc [7:0] $end
$upscope $end
$scope module regfile $end
$var wire 8 E E [7:0] $end
$var wire 8 F M [7:0] $end
$var wire 1 ( clk $end
$var wire 3 G dstE [2:0] $end
$var wire 3 H dstM [2:0] $end
$var wire 3 I srcA [2:0] $end
$var wire 3 J srcB [2:0] $end
$var wire 8 K B [7:0] $end
$var wire 8 L A [7:0] $end
$upscope $end
$upscope $end
$scope module ram $end
$var wire 8 M addr [7:0] $end
$var wire 1 ( clk $end
$var wire 8 N in [7:0] $end
$var wire 1 $ rd_ $end
$var wire 1 ! wr_ $end
$var wire 8 O out [7:0] $end
$upscope $end
$scope module rom $end
$var wire 8 P addr [7:0] $end
$var wire 24 Q out [23:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 Q
b0 P
bx O
b0 N
b0 M
b0 L
b0 K
b0 J
b0 I
b0 H
b0 G
bx F
b0 E
b0 D
b1 C
b0 B
b10 A
b0 @
b0 ?
b0 >
b0 =
b0 <
b10 ;
b0 :
b0 9
b1 8
b0 7
bx 6
b0 5
b0 4
b0 3
b0 2
b0 1
b0 0
b0 /
b1 .
b0 -
b0 ,
bx +
bx *
0)
1(
b0 '
b0 &
bx %
1$
b0 #
b0 "
1!
$end
#5
b1000 *
0(
#10
1(
#15
b1000 *
0(
1)
#20
b10 8
b10 C
b10 .
b1 #
b1 4
b1 D
b1 P
1(
#25
b1000 *
0(
#30
b11 8
b11 C
b11 .
b10 #
b10 4
b10 D
b10 P
1(
#35
b1000 *
0(
#40
b1100001 0
b100 8
b100 C
b1100001 "
b1100001 3
b1100001 Q
b100 .
b11 #
b11 4
b11 D
b11 P
1(
#45
b1000 *
0(
#50
b111 '
b111 7
b111 M
b111 /
b111 B
b111 E
b1 &
b1 5
b1 N
b1 <
b1 ?
b1 ;
b1 A
b110 =
b110 >
b110 2
b110 L
b1 1
b1 K
b110 -
b110 I
b1 ,
b1 J
b110111 0
b101 8
b101 C
b110000100110111 "
b110000100110111 3
b110000100110111 Q
b101 .
b100 #
b100 4
b100 D
b100 P
1(
#55
b1000 *
0(
#60
b111 :
b111 G
b1 ;
b1 A
b1 <
b1 ?
b11111111 =
b11111111 >
0!
b11 2
b11 L
b11111110 '
b11111110 7
b11111110 M
b11111111 1
b11111111 K
b11 -
b11 I
b11 &
b11 5
b11 N
b11111110 /
b11111110 B
b11111110 E
b111 ,
b111 J
b0 0
b1000 8
b1000 C
b1 @
b11000010011011100000000 "
b11000010011011100000000 3
b11000010011011100000000 Q
b1000 .
b101 #
b101 4
b101 D
b101 P
1(
#65
b1000 *
0(
#70
1!
b11 :
b11 G
b100 '
b100 7
b100 M
b11 &
b11 5
b11 N
b100 /
b100 B
b100 E
b11 ,
b11 J
b1 0
b1011 8
b1011 C
b11 =
b11 >
b0 @
b11 1
b11 K
b10000000011001100000001 "
b10000000011001100000001 3
b10000000011001100000001 Q
b1011 .
b1000 #
b1000 4
b1000 D
b1000 P
1(
#75
b1000 *
0(
#80
b11 +
b11 F
b11 %
b11 6
b11 O
0$
b10 9
b10 H
b11111110 '
b11111110 7
b11111110 M
b111 :
b111 G
b1 ;
b1 A
b1 <
b1 ?
b11111111 /
b11111111 B
b11111111 E
b11111110 &
b11111110 5
b11111110 N
b111 -
b111 I
b111 ,
b111 J
b0 0
b1110 8
b1110 C
b11111110 =
b11111110 >
b11111110 2
b11111110 L
b11111110 1
b11111110 K
b11100000010011100000000 "
b11100000010011100000000 3
b11100000010011100000000 Q
b1110 .
b1011 #
b1011 4
b1011 D
b1011 P
1(
#85
b1000 *
0(
#90
b0 <
b0 ?
1$
b0 :
b0 G
b10 ;
b10 A
b0 9
b0 H
bx +
bx F
bx %
bx 6
bx O
b0 &
b0 5
b0 N
b0 /
b0 B
b0 E
b0 ,
b0 J
b0 -
b0 I
b1111 8
b1111 C
b0 '
b0 7
b0 M
b0 =
b0 >
b0 2
b0 L
b0 1
b0 K
b0 "
b0 3
b0 Q
b1111 .
b1110 #
b1110 4
b1110 D
b1110 P
1(
#95
b1000 *
0(
#100
b10000 8
b10000 C
b10000 .
b1111 #
b1111 4
b1111 D
b1111 P
1(
#105
b1000 *
0(
#110
b10001 8
b10001 C
b10001 .
b10000 #
b10000 4
b10000 D
b10000 P
1(
#115
b1000 *
0(
#120
b11110000 0
b10010 8
b10010 C
b11110000 "
b11110000 3
b11110000 Q
b10010 .
b10001 #
b10001 4
b10001 D
b10001 P
1(
#125
b1000 *
0(
#130
b11111111 '
b11111111 7
b11111111 M
b11111111 /
b11111111 B
b11111111 E
b1 ;
b1 A
b11111111 =
b11111111 >
b11111111 2
b11111111 L
b111 -
b111 I
bx 0
b10011 8
b10011 C
b11110000xxxxxxxx "
b11110000xxxxxxxx 3
b11110000xxxxxxxx Q
b10011 .
b10010 #
b10010 4
b10010 D
b10010 P
1(
#135
b1000 *
0(
#140
bx '
bx 7
bx M
bx /
bx B
bx E
bx &
bx 5
bx N
bx <
bx ?
bx ;
bx A
bx =
bx >
bx 2
bx L
bx 1
bx K
bx -
bx I
bx ,
bx J
b10011 8
b10011 C
b11110000xxxxxxxxxxxxxxxx "
b11110000xxxxxxxxxxxxxxxx 3
b11110000xxxxxxxxxxxxxxxx Q
b10011 .
b10011 #
b10011 4
b10011 D
b10011 P
1(
#145
0(
#150
1(
#155
0(
#156
